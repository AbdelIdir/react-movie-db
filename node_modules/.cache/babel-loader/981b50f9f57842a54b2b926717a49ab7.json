{"ast":null,"code":"import _slicedToArray from \"/Users/workstation/Desktop/practice/react-rmdb-starterFiles_rev1/Reactt-RMDB /node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/workstation/Desktop/practice/react-rmdb-starterFiles_rev1/Reactt-RMDB /src/components/Home.js\";\nimport React, { useState } from \"react\";\nimport { API_URL, API_KEY, API_BASE_URL, POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\nimport HeroImage from \"./elements/HeroImage\";\nimport Grid from \"./elements/Grid\";\nimport Header from \"./elements/Header\";\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\nimport MovieThumb from \"./elements/MovieThumb\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Spinner from \"./elements/Spinner\"; // Custom hook\n\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\nimport NoImage from \"./images/no_image.jpg\";\n\nconst Home = props => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        _useHomeFetch2$$state = _useHomeFetch2$.state,\n        movies = _useHomeFetch2$$state.movies,\n        currentPage = _useHomeFetch2$$state.currentPage,\n        totalPages = _useHomeFetch2$$state.totalPages,\n        heroImage = _useHomeFetch2$$state.heroImage,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setsearchTerm = _useState2[1];\n\n  const loadMoreMovies = () => {};\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Something went wrong...\");\n  if (!movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? \"Search Result\" : \"Popular Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" \", movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), \" \"), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/workstation/Desktop/practice/react-rmdb-starterFiles_rev1/Reactt-RMDB /src/components/Home.js"],"names":["React","useState","API_URL","API_KEY","API_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","HeroImage","Grid","Header","LoadMoreBtn","MovieThumb","SearchBar","Spinner","useHomeFetch","NoImage","Home","props","state","movies","currentPage","totalPages","heroImage","loading","error","fetchMovies","searchTerm","setsearchTerm","loadMoreMovies","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,OADF,EAEEC,OAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,QAOO,WAPP;AASA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,wBAQhBH,YAAY,EARI;AAAA;AAAA;AAAA,gDAGhBI,KAHgB;AAAA,QAGPC,MAHO,yBAGPA,MAHO;AAAA,QAGCC,WAHD,yBAGCA,WAHD;AAAA,QAGcC,UAHd,yBAGcA,UAHd;AAAA,QAG0BC,SAH1B,yBAG0BA,SAH1B;AAAA,QAIhBC,OAJgB,mBAIhBA,OAJgB;AAAA,QAKhBC,KALgB,mBAKhBA,KALgB;AAAA,QAOlBC,WAPkB;;AAAA,oBAUgBzB,QAAQ,CAAC,EAAD,CAVxB;AAAA;AAAA,QAUb0B,UAVa;AAAA,QAUDC,aAVC;;AAYlB,QAAMC,cAAc,GAAG,MAAM,CAE9B,CAFC;;AAIF,MAAIJ,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACX,MAAI,CAACL,MAAM,CAAC,CAAD,CAAX,EAAgB,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,SACE,0CACE,oBAAC,SAAD;AACE,IAAA,KAAK,YAAKb,cAAL,SAAsBD,aAAtB,SAAsCiB,SAAS,CAACO,aAAhD,CADP;AAEE,IAAA,KAAK,EAAEP,SAAS,CAACQ,cAFnB;AAGE,IAAA,IAAI,EAAER,SAAS,CAACS,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEL,UAAU,GAAG,eAAH,GAAqB,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGP,MAAM,CAACa,GAAP,CAAWC,KAAK,IACf,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EACHD,KAAK,CAACE,WAAN,aACO7B,cADP,SACwBF,WADxB,SACsC6B,KAAK,CAACE,WAD5C,IAEIpB,OANR;AAQE,IAAA,OAAO,EAAEkB,KAAK,CAACC,EARjB;AASE,IAAA,SAAS,EAAED,KAAK,CAACH,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,EAcM,GAdN,CAPF,EAuBGP,OAAO,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBd,EAwBE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,QAAQ,EAAEK,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AA4BD,CA/CD;;AAiDA,eAAeZ,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  API_URL,\n  API_KEY,\n  API_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL\n} from \"../config\";\n\nimport HeroImage from \"./elements/HeroImage\";\nimport Grid from \"./elements/Grid\";\nimport Header from \"./elements/Header\";\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\nimport MovieThumb from \"./elements/MovieThumb\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Spinner from \"./elements/Spinner\";\n\n// Custom hook\n\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\nimport NoImage from \"./images/no_image.jpg\";\nconst Home = props => {\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error\n    },\n    fetchMovies\n  ] = useHomeFetch();\n\n  const [searchTerm, setsearchTerm] = useState(\"\");\n\n    const loadMoreMovies = () => {\n      \n  };\n\n  if (error) return <div>Something went wrong...</div>;\n  if (!movies[0]) return <Spinner />;\n\n  return (\n    <>\n      <HeroImage\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      <SearchBar />\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n        {\" \"}\n        {movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}{\" \"}\n      </Grid>\n      {loading && <Spinner />}\n      <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}